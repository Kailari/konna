import org.gradle.internal.os.OperatingSystem

plugins {
    id "application"
    id "java"
    id "org.beryx.jlink" version "2.16.4"
}

def buildPlatformName = System.getenv("TARGET_PLATFORM")
def buildPlatform = buildPlatformName != null ? OperatingSystem.forName(buildPlatformName) : null
if (buildPlatform == null) {
    buildPlatform = OperatingSystem.current()
}

switch (buildPlatform) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}


dependencies {
    implementation project(':game.app')

    // LWJGL and its components
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-opengl"
    for (lwjglModule in ["", "-assimp", "-glfw", "-openal", "-opengl", "-stb", "-opengl"]) {
        implementation "org.lwjgl:lwjgl${lwjglModule}::${lwjglNatives}"
    }
    implementation "org.joml:joml:${jomlVersion}"
}

application {
    mainClassName = "roguelite.launcher/fi.jakojaannos.roguelite.launcher.Main"
    //applicationDefaultJvmArgs = ['-XX:+PrintGCDetails']
}

if (buildPlatformName != null) {
    jlink {
        switch (buildPlatform) {
            case OperatingSystem.LINUX:
                targetPlatform(buildPlatformName, System.getenv("JAVA_HOME_LINUX"))
                break
            case OperatingSystem.MAC_OS:
                targetPlatform(buildPlatformName, System.getenv("JAVA_HOME_MACOS"))
                break
            case OperatingSystem.WINDOWS:
                targetPlatform(buildPlatformName, System.getenv("JAVA_HOME_WINDOWS"))
                break
        }

        mergedModule {
        }
        launcher {
            name = 'konna'
            jvmArgs = []
        }
    }

    tasks.jlink.doLast {
        copy {
            from('../assets')
            into("${buildDir}/image/konna-${buildPlatformName}/bin/assets")
            exclude("**/*.aseprite")
        }
    }
} else {
    jlink {
        mergedModule {
        }
        launcher {
            name = 'konna'
            jvmArgs = []
        }
    }

    tasks.jlink.doLast {
        copy {
            from('../assets')
            into("$buildDir/image/bin/assets")
            exclude("**/*.aseprite")
        }
    }
}

run {
    moduleOptions {
        addModules = [
                "org.lwjgl.natives",
                "org.lwjgl.opengl.natives",
                "org.lwjgl.glfw.natives",
        ]
        addReads = ["launcher": "org.lwjgl.natives,org.lwjgl.opengl.natives,org.lwjgl.glfw.natives"]
    }

    //jvmArgs = ['-XX:+PrintGCDetails']
    setArgsString("--debug --assetRoot ../assets/")
}

task runClient {
    group 'application'

    doFirst { run.setArgsString("--debug --assetRoot ../assets/ --client localhost 18181") }
    finalizedBy(run)
}

task runServer {
    group 'application'

    doFirst { run.setArgsString("--debug --assetRoot ../assets/ --server 18181") }
    finalizedBy(run)
}

jar {
    manifest {
        attributes "Main-Class": "fi.jakojaannos.roguelite.launcher.Main"
    }
}


test {
    moduleOptions {
        runOnClasspath = true
    }
}

