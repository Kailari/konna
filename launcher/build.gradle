import org.gradle.internal.os.OperatingSystem

apply plugin: 'application'
apply plugin: 'java'

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

dependencies {
    implementation project(':engine')
    implementation project(':game')

    // LWJGL and its components
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-opengl"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    implementation "org.joml:joml:${jomlVersion}"


    // Lombok
    compileOnly "org.projectlombok:lombok:1.18.10"
    testCompileOnly "org.projectlombok:lombok:1.18.10"
    annotationProcessor "org.projectlombok:lombok:1.18.10"

    // Logging
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    runtimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"
}

application {
    mainClassName = "$moduleName/fi.jakojaannos.roguelite.launcher.Main"
    //applicationDefaultJvmArgs = ['-XX:+PrintGCDetails']
}

run {
    moduleOptions {
        addModules = [
                "org.lwjgl.natives",
                "org.lwjgl.opengl.natives",
                "org.lwjgl.glfw.natives",
        ]
        addReads = ["launcher": "org.lwjgl.natives,org.lwjgl.opengl.natives,org.lwjgl.glfw.natives"]
    }

    //jvmArgs = ['-XX:+PrintGCDetails']
    setArgsString("--enableForceClose --assetRoot ../assets/")
}


test {
    moduleOptions {
        runOnClasspath = true
    }
}

